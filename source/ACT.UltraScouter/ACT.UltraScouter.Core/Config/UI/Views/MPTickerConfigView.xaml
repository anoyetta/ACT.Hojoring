<Page
  x:Class="ACT.UltraScouter.Config.UI.Views.MPTickerConfigView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:wpf="clr-namespace:FFXIV.Framework.WPF;assembly=FFXIV.Framework"
  xmlns:vm="clr-namespace:ACT.UltraScouter.Config.UI.ViewModels"
  xmlns:fw="clr-namespace:FFXIV.Framework.Common;assembly=FFXIV.Framework"
  xmlns:local="clr-namespace:ACT.UltraScouter.Config.UI.Views"
  xmlns:mainv="clr-namespace:ACT.UltraScouter.Views"
  xmlns:cnv="clr-namespace:FFXIV.Framework.WPF.Converters;assembly=FFXIV.Framework"
  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  mc:Ignorable="d"
  Title="TargetActionConfigView"
  TextOptions.TextFormattingMode="Display"
  TextOptions.TextHintingMode="Animated"
  TextOptions.TextRenderingMode="ClearType"
  RenderOptions.ClearTypeHint="Enabled"
  RenderOptions.BitmapScalingMode="HighQuality"
  RenderOptions.EdgeMode="Unspecified"
  Background="White"
  FontFamily="Consolas, Yu Gothic UI, Meiryo UI"
  FontSize="17"
  d:DesignWidth="1024"
  d:DataContext="{d:DesignInstance Type=vm:MPTickerConfigViewModel}"
  DataContext="{Binding RelativeSource={RelativeSource Self}}">

  <Page.Resources>
    <ResourceDictionary>
      <Style TargetType="CheckBox">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
      </Style>

      <cnv:ColorToSolidColorBrushConverter x:Key="ColorToBrushConverter" />
      <cnv:BoolToCollapsedConverter x:Key="BoolToVisibilityConverter" />

      <ResourceDictionary.MergedDictionaries>
        <wpf:DesignTimeResourceDictionary Source="../../../resources/strings/Strings.UlSco.en-US.xaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Page.Resources>

  <ScrollViewer>
    <StackPanel Margin="20">
      <CheckBox
        Margin="0 0 0 0"
        Content="{DynamicResource Common_Visible}"
        IsChecked="{Binding MPTicker.Visible, Mode=TwoWay}" />
      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource MPTicker_VisibleCounter}"
        IsChecked="{Binding MPTicker.CounterVisible, Mode=TwoWay}" />
      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource MPTicker_SyncHoT}"
        IsChecked="{Binding MPTicker.IsSyncHoT, Mode=TwoWay}" />
      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource MPTicker_SyncDoT}"
        IsChecked="{Binding MPTicker.IsSyncDoT, Mode=TwoWay}" />
      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource MPTicker_SyncMP}"
        IsChecked="{Binding MPTicker.IsSyncMP, Mode=TwoWay}"
        Visibility="{Binding MPTicker.IsUnlockMPSync, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}" />
      <CheckBox
        Margin="0 5 0 0"
        x:Name="TestModeCheckBox"
        Content="{DynamicResource Common_TestMode}"
        IsChecked="{Binding MPTicker.TestMode, Mode=TwoWay}" />

      <Label
        Margin="0 15 0 0"
        Content="{DynamicResource Common_Location}" />
      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="6 0 5 0" Text="X" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MPTicker.Location.X, Mode=TwoWay}" Width="75" Increment="1" />
        <TextBlock Margin="10 0 5 0" Text="Y" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MPTicker.Location.Y, Mode=TwoWay}" Width="75" Increment="1" />
      </StackPanel>

      <Label
        Margin="0 15 0 0"
        Content="{DynamicResource Common_Font}" />

      <TextBlock Margin="7,0,0,0" FontWeight="Bold">
        <Hyperlink
          Command="{Binding TargetActionDisplayTextFontCommand}"
          CommandParameter="{Binding MPTicker.DisplayText.Font}">
          <TextBlock Text="{Binding MPTicker.DisplayText.Font.DisplayText}" />
        </Hyperlink>
      </TextBlock>

      <TextBlock Margin="7,8,0,0" FontWeight="Bold">
        <Hyperlink
          Command="{Binding TargetActionDisplayTextColorCommand}"
          CommandParameter="{Binding MPTicker.DisplayText.Color}">
          <TextBlock Text="{DynamicResource Common_FillColor}" />
        </Hyperlink>
      </TextBlock>

      <TextBlock Margin="7,0,0,0" FontWeight="Bold">
        <Hyperlink
          Command="{Binding TargetActionDisplayTextOutlineColorCommand}"
          CommandParameter="{Binding MPTicker.DisplayText.OutlineColor}">
          <TextBlock Text="{DynamicResource Common_StrokeColor}" />
        </Hyperlink>
      </TextBlock>

      <!-- バー -->
      <Label
        Margin="0 15 0 0"
        Content="{DynamicResource MPTicker_Bar}" />

      <ListView
        Margin="0 5 0 0"
        ItemsSource="{Binding MPTicker.ProgressBar.ColorRange}"
        BorderThickness="0"
        HorizontalAlignment="Left">
        <ListView.ItemTemplate>
          <DataTemplate>
            <StackPanel Orientation="Horizontal">
              <xctk:DoubleUpDown Margin="0 0 0 0" Width="68" Value="{Binding Min, Mode=TwoWay}" FormatString="N1" Increment="0.1" />
              <TextBlock Margin="3 0 3 0" Text="-" />
              <xctk:DoubleUpDown Margin="0 0 0 0" Width="68" Value="{Binding Max, Mode=TwoWay}" FormatString="N1" Increment="0.1" />

              <Border
                Margin="10 0 0 0"
                Padding="20 2 20 2"
                Background="{Binding Color, Converter={StaticResource ColorToBrushConverter}}">
                <TextBlock>
                  <Hyperlink
                    Command="{Binding ChangeColorCommand}"
                    CommandParameter="{Binding}">
                    <TextBlock Text="{DynamicResource Common_Change}" Foreground="White" FontSize="15" />
                  </Hyperlink>
                </TextBlock>
              </Border>

              <TextBlock Margin="40,0,0,0">
                <Hyperlink
                  Command="{Binding DeleteColorCommand}"
                  CommandParameter="{Binding ID}">
                  <TextBlock Text="{DynamicResource Common_Delete}" />
                </Hyperlink>
              </TextBlock>
            </StackPanel>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>

      <TextBlock Margin="8 0 0 0">
        <Hyperlink Command="{Binding TargetActionBarAddCommand}">
          <TextBlock Text="{DynamicResource Common_Add}" />
        </Hyperlink>
      </TextBlock>

      <Label
        Margin="0 15 0 0"
        Content="{DynamicResource MPTicker_BarStrokeColor}" />
      <Border
        Margin="5 0 0 0"
        HorizontalAlignment="Left"
        Width="100"
        Height="30"
        Background="{Binding MPTicker.ProgressBar.OutlineColor, Converter={StaticResource ColorToBrushConverter}}">
        <TextBlock
          VerticalAlignment="Center"
          HorizontalAlignment="Center">
          <Hyperlink
            Command="{Binding TargetActionProgressBarOutlineColorCommand}"
            CommandParameter="{Binding MPTicker.ProgressBar.OutlineColor}">
            <TextBlock Text="{DynamicResource Common_Change}" Foreground="White" FontSize="15" />
          </Hyperlink>
        </TextBlock>
      </Border>

      <CheckBox
        Margin="0 5 0 0"
        Content="{DynamicResource MPTicker_LinkBarStrokeColorToBarColor}"
        IsChecked="{Binding MPTicker.ProgressBar.LinkOutlineColor, Mode=TwoWay}"
        Command="{Binding RefreshMPTickerCommand, Mode=OneWay}" />

      <Label
        Margin="0 20 0 0"
        Content="{DynamicResource MPTicker_BarSize}" />
      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="6 0 5 0" Text="W" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MPTicker.ProgressBar.Width, Mode=TwoWay}" Width="75" Increment="1" />
        <TextBlock Margin="10 0 5 0" Text="H" VerticalAlignment="Center" />
        <xctk:DoubleUpDown Value="{Binding MPTicker.ProgressBar.Height, Mode=TwoWay}" Width="75" Increment="1" />
      </StackPanel>

      <StackPanel Margin="0 15 0 0" Orientation="Horizontal">
        <CheckBox
          Margin="0 0 0 0"
          Content="{DynamicResource MPTicker_CircleStyle}"
          IsChecked="{Binding MPTicker.UseCircle, Mode=TwoWay}" />
        <CheckBox
          Margin="25 0 0 0"
          Content="{DynamicResource MPTicker_RotateCCW}"
          Command="{Binding TestModeCommand}"
          CommandParameter="{Binding ElementName=TestModeCheckBox, Path=IsChecked, Mode=OneWay}"
          Visibility="{Binding MPTicker.UseCircle, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
          IsChecked="{Binding MPTicker.IsCircleReverse, Mode=TwoWay}" />
        <CheckBox
          Margin="25 0 0 0"
          Content="{DynamicResource MPTicker_SwapBarAndText}"
          Visibility="{Binding MPTicker.IsSquareStyle, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
          IsChecked="{Binding MPTicker.SwapBarAndText, Mode=TwoWay}" />
      </StackPanel>

      <Label
        Margin="0 15 0 0"
        Content="{DynamicResource MPTicker_ResyncInterval}" />
      <StackPanel Orientation="Horizontal">
        <xctk:DoubleUpDown
          HorizontalAlignment="Left"
          Value="{Binding MPTicker.ResyncInterval, Mode=TwoWay}"
          Width="75"
          Minimum="3"
          Maximum="180"
          Increment="1" />

        <TextBlock Margin="10 0 0 0" VerticalAlignment="Center">
          <Hyperlink
            Command="{Binding RestartTickerCommand, Mode=OneWay}">Restart</Hyperlink>
        </TextBlock>
      </StackPanel>

      <Label
        Margin="5 20 0 0"
        Padding="0"
        Content="{DynamicResource MPTicker_ExplationTimeForDisplay1}" />
      <Label
        Margin="5 0 0 8"
        Padding="0"
        Content="{DynamicResource MPTicker_ExplationTimeForDisplay2}" />
      <Slider
        HorizontalAlignment="Left"
        Width="520"
        Name="ExplationTimeForDisplaySlider"
        Minimum="0" Maximum="300"
        LargeChange="1"
        SmallChange="1"
        Value="{Binding MPTicker.ExplationTimeForDisplay, Mode=TwoWay}" />
      <TextBlock
        HorizontalAlignment="Left"
        Margin="8 3 0 0"
        Text="{Binding ElementName=ExplationTimeForDisplaySlider, Path=Value, Mode=OneWay, StringFormat={}{0:N0}}" />

      <Label
        Margin="0 20 0 0"
        Content="{DynamicResource MPTicker_TargetJobs}" />
      <ListView
        ItemsSource="{Binding MPTicker.TargetJobs}"
        ScrollViewer.VerticalScrollBarVisibility="Disabled"
        BorderThickness="0"
        Height="250">
        <ListView.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel Orientation="Vertical" />
          </ItemsPanelTemplate>
        </ListView.ItemsPanel>
        <ListView.ItemTemplate>
          <DataTemplate>
            <CheckBox
              Margin="0 5 25 5"
              Content="{Binding JobName, Mode=OneWay}"
              IsChecked="{Binding Available, Mode=TwoWay}"
              HorizontalAlignment="Left"
              VerticalAlignment="Center" />
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </StackPanel>
  </ScrollViewer>
</Page>
